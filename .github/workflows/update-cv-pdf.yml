name: Update CV PDF

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Fetch and convert to PDF
        run: |
          set -euo pipefail
          URL="${{ secrets.ONEDRIVE_DOCX_URL }}"
          if [ -z "${URL}" ]; then
            echo "ERROR: Set repository secret ONEDRIVE_DOCX_URL to a public OneDrive share link to your DOCX." >&2
            exit 1
          fi

          mkdir -p documents
          UA='Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0 Safari/537.36'

          # Try to resolve 1drv.ms/Doc.aspx viewer links to a direct download URL
          echo "Resolving share link to direct download if possible..."
          RESOLVED=$(curl -A "$UA" -sS -L -o /dev/null -w '%{url_effective}' "$URL" || true)
          URL_DL=""
          if echo "$RESOLVED" | grep -qi 'resid='; then
            RESID=$(printf '%s' "$RESOLVED" | sed -n 's/.*[?&]resid=\([^&]*\).*/\1/p')
            AUTHKEY=$(printf '%s' "$RESOLVED" | sed -n 's/.*[?&]authkey=\([^&]*\).*/\1/p')
            if [ -n "${RESID}" ] && [ -n "${AUTHKEY}" ]; then
              URL_DL="https://onedrive.live.com/download?resid=${RESID}&authkey=${AUTHKEY}"
              echo "Derived direct download URL via resid/authkey."
            fi
          fi

          echo "Attempting direct DOCX download..."
          curl -A "$UA" -L --fail -o cv.docx "${URL_DL:-$URL}" || true

          IS_DOCX=0
          if [ -f cv.docx ]; then
            # Check if file is a ZIP (DOCX is a zip container)
            if command -v file >/dev/null 2>&1; then
              if file cv.docx | grep -qi "zip archive"; then
                IS_DOCX=1
              fi
            else
              # Fallback quick check: first 4 bytes 'PK' for zip
              if head -c 4 cv.docx | grep -q "PK"; then
                IS_DOCX=1
              fi
            fi
          fi

          # If not a DOCX yet, try scraping the page for a download link
          if [ "$IS_DOCX" -ne 1 ]; then
            echo "First attempt didn't yield a DOCX; trying to extract direct download link from page HTML..."
            rm -f cv.docx || true
            PAGE=$(mktemp)
            curl -A "$UA" -sSL -o "$PAGE" "${RESOLVED:-$URL}"
            DL_PATH=$(grep -oE 'download\?resid=[^&"\\]+'&authkey=[^&"\\]+' "$PAGE" | head -n 1 | sed 's/&amp;/\&/g' || true)
            if [ -n "$DL_PATH" ]; then
              URL_DL="https://onedrive.live.com/${DL_PATH}"
              echo "Found download link in HTML; retrying DOCX download..."
              curl -A "$UA" -L --fail -o cv.docx "$URL_DL" || true
              # Re-check
              if [ -f cv.docx ]; then
                if command -v file >/dev/null 2>&1; then
                  if file cv.docx | grep -qi "zip archive"; then
                    IS_DOCX=1
                  fi
                else
                  if head -c 4 cv.docx | grep -q "PK"; then
                    IS_DOCX=1
                  fi
                fi
              fi
            else
              echo "No direct download link found in HTML."
            fi
          fi

          if [ "$IS_DOCX" -eq 1 ]; then
            echo "DOCX download succeeded; converting via LibreOffice..."
            sudo apt-get update
            sudo apt-get install -y libreoffice
            soffice --headless --convert-to pdf --outdir documents cv.docx
            # Normalize final name used by site
            OUT=$(ls -1 documents/*.pdf 2>/dev/null | head -n 1 || true)
            if [ -z "$OUT" ]; then
              echo "ERROR: No PDF produced by LibreOffice" >&2
              exit 1
            fi
            mv -f "$OUT" documents/Abdillah-Ilham-CV-Indonesia.pdf
          else
            echo "Direct DOCX not accessible; trying Office Online export..."
            # URL-encode using Python (one-liner avoids YAML heredoc indent issues)
            ENCODED=$(python3 -c "import sys, urllib.parse; print(urllib.parse.quote(sys.argv[1], safe=''))" "${URL_DL:-$URL}")

            # Try export with retries and capture errors without bailing immediately
            set +e
            curl -A "$UA" -L --fail --retry 3 --retry-delay 2 -sS \
              -o documents/Abdillah-Ilham-CV-Indonesia.pdf \
              "https://export.word.officeapps.live.com/export?format=pdf&url=${ENCODED}"
            RC=$?
            set -e

            if [ $RC -ne 0 ] || [ ! -s documents/Abdillah-Ilham-CV-Indonesia.pdf ]; then
              echo "Office export failed (curl exit $RC)." >&2
              echo "Hint: Ensure your OneDrive link is set to 'Anyone with the link can view' and is the actual share link copied from OneDrive (not a redirected URL)." >&2
              exit 1
            fi
          fi

      - name: Commit if changed
        run: |
          git add documents/Abdillah-Ilham-CV-Indonesia.pdf
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "Update CV PDF from OneDrive"
          git push
